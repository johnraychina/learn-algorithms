package 每日一题;

/**
 *
 * 664. 奇怪的打印机
 * 有台奇怪的打印机有以下两个特殊要求：
 *
 * 打印机每次只能打印由 同一个字符 组成的序列。
 * 每次可以在任意起始和结束位置打印新字符，并且会覆盖掉原来已有的字符。
 * 给你一个字符串 s ，你的任务是计算这个打印机打印它需要的最少打印次数。
 *
 * @hint 深度优先搜索，动态规划
 */
public class 奇怪的打印机664 {
    public int strangePrinter(String s) {
        // 如何从最坏情况一步步优化呢？
        // 优化 -> 动态规划

        //todo
        return 0;
    }
}
